map $cookie_token $auth_header {
    "~^(?<v>.*)$" "Bearer $v";
    default "Bearer invalid";
}

map $http_authorization $bearer_header {
    "" "$auth_header";
    default $http_authorization;
}

server {
    server_name labforge.mrtstg.local;
    listen 80;

    proxy_cache        off;
    proxy_redirect     off;
    proxy_set_header   Host $host;
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Host $server_name;
    proxy_set_header Authorization $bearer_header;
    add_header Authorization $auth_header;

    location / {
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        auth_request /token-frontend-check;
        auth_request_set $new_cookie $sent_http_set_cookie;
        add_header Set-Cookie $new_cookie;
        proxy_pass http://127.0.0.1:8050;
        error_page 401 = @error401;
    }

    location /api/cluster/ {
        proxy_pass http://127.0.0.1:8001;
    }

    location /api/auth/ {
        proxy_pass http://127.0.0.1:8000;
    }

    location /api/deployment/ {
        proxy_pass http://127.0.0.1:8002;
    }

    location ~ "/api/vm/(?<port>.*)/vnc" {
        auth_request /vm-check;
        set $vmport $port;

        rewrite ^(.*)$ /?token=$port break;
        proxy_pass http://localhost:6080;
        proxy_buffering off;
        proxy_read_timeout 600s;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    location = /vm-check {
        rewrite ^(.*)$          /api/deployment/vmport/access break;
        proxy_pass_request_body off;
        proxy_set_header        X-VM-PORT $vmport;
        proxy_set_header        Authorization $auth_header;
        proxy_set_header        Content-Length "";
        proxy_set_header        X-Original-URI $request_uri;
        proxy_pass              http://localhost:8002;
        internal;
    }

    location = /token-frontend-check {
        rewrite ^(.*)$          /api/auth/capabilities break;
        proxy_pass_request_body off;
        proxy_set_header        Authorization $auth_header;
        proxy_set_header        Content-Length "";
        proxy_set_header        X-Original-URI $request_uri;
        proxy_pass              http://localhost:8000;
        internal;
    }

    location @error401 {
        return 302 /api/auth/login?redirectTo=$request_uri;
    }
}
